  practice_2021_spring.cpp
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(30): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(31): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(36): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(37): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(42): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(43): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(48): warning C4244: =: преобразование "double" в "int", возможна потеря данных
d:\my_projects\practice_2021_spring\practice_2021_spring\practice_2021_spring.cpp(49): warning C4244: =: преобразование "double" в "int", возможна потеря данных
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall cv::Exception::Exception(int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)" (??0Exception@cv@@QAE@HABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z) в функции "public: class cv::Vec<unsigned char,3> & __thiscall cv::Mat::at<class cv::Vec<unsigned char,3> >(int,int)" (??$at@V?$Vec@E$02@cv@@@Mat@cv@@QAEAAV?$Vec@E$02@1@HH@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual __thiscall cv::Exception::~Exception(void)" (??1Exception@cv@@UAE@XZ) в функции "public: class cv::Vec<unsigned char,3> & __thiscall cv::Mat::at<class cv::Vec<unsigned char,3> >(int,int)" (??$at@V?$Vec@E$02@cv@@@Mat@cv@@QAEAAV?$Vec@E$02@1@HH@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "void __cdecl cv::error(class cv::Exception const &)" (?error@cv@@YAXABVException@1@@Z) в функции "public: class cv::Vec<unsigned char,3> & __thiscall cv::Mat::at<class cv::Vec<unsigned char,3> >(int,int)" (??$at@V?$Vec@E$02@cv@@@Mat@cv@@QAEAAV?$Vec@E$02@1@HH@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "void __cdecl cv::fastFree(void *)" (?fastFree@cv@@YAXPAX@Z) в функции "public: __thiscall cv::Mat::~Mat(void)" (??1Mat@cv@@QAE@XZ)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall cv::_InputArray::_InputArray(class cv::Mat const &)" (??0_InputArray@cv@@QAE@ABVMat@1@@Z) в функции _main
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class cv::Mat & __thiscall cv::Mat::operator=(class cv::Scalar_<double> const &)" (??4Mat@cv@@QAEAAV01@ABV?$Scalar_@N@1@@Z) в функции "public: __thiscall cv::Mat::Mat(int,int,int,class cv::Scalar_<double> const &)" (??0Mat@cv@@QAE@HHHABV?$Scalar_@N@1@@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: void __thiscall cv::Mat::create(int,int const *,int)" (?create@Mat@cv@@QAEXHPBHH@Z) в функции "public: void __thiscall cv::Mat::create(int,int,int)" (?create@Mat@cv@@QAEXHHH@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: void __thiscall cv::Mat::deallocate(void)" (?deallocate@Mat@cv@@QAEXXZ) в функции "public: void __thiscall cv::Mat::release(void)" (?release@Mat@cv@@QAEXXZ)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: void __thiscall cv::Mat::copySize(class cv::Mat const &)" (?copySize@Mat@cv@@QAEXABV12@@Z) в функции "public: __thiscall cv::Mat::Mat(class cv::Mat const &)" (??0Mat@cv@@QAE@ABV01@@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "int __cdecl cv::_interlockedExchangeAdd(int *,int)" (?_interlockedExchangeAdd@cv@@YAHPAHH@Z) в функции "public: __thiscall cv::Mat::Mat(class cv::Mat const &)" (??0Mat@cv@@QAE@ABV01@@Z)
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "int __cdecl cv::waitKey(int)" (?waitKey@cv@@YAHH@Z) в функции _main
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "void __cdecl cv::imshow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &)" (?imshow@cv@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV_InputArray@1@@Z) в функции _main
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "class cv::Mat __cdecl cv::imread(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)" (?imread@cv@@YA?AVMat@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z) в функции _main
practice_2021_spring.obj : error LNK2019: ссылка на неразрешенный внешний символ "bool __cdecl cv::imwrite(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &,class std::vector<int,class std::allocator<int> > const &)" (?imwrite@cv@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV_InputArray@1@ABV?$vector@HV?$allocator@H@std@@@3@@Z) в функции _main
D:\My_projects\practice_2021_spring\Debug\practice_2021_spring.exe : fatal error LNK1120: неразрешенных внешних элементов: 14
